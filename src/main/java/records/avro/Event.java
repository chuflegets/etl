/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package records.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class Event extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -7607355820199391761L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Event\",\"namespace\":\"records.avro\",\"fields\":[{\"name\":\"timestamp\",\"type\":\"long\"},{\"name\":\"src_ip\",\"type\":\"string\"},{\"name\":\"geolocation\",\"type\":\"string\"},{\"name\":\"request_method\",\"type\":{\"type\":\"enum\",\"name\":\"RequestMethod\",\"symbols\":[\"GET\",\"POST\",\"HEAD\",\"OPTIONS\",\"PUT\",\"DELETE\"]}},{\"name\":\"request_status\",\"type\":{\"type\":\"enum\",\"name\":\"RequestStatus\",\"symbols\":[\"passed\",\"blocked\",\"alerted\"]}},{\"name\":\"response_code\",\"type\":\"int\"},{\"name\":\"attack_type\",\"type\":\"string\"},{\"name\":\"content_length\",\"type\":\"int\"},{\"name\":\"content_type\",\"type\":\"string\"},{\"name\":\"language\",\"type\":\"string\"},{\"name\":\"referer\",\"type\":\"string\"},{\"name\":\"user_agent\",\"type\":\"string\"},{\"name\":\"uri\",\"type\":\"string\"},{\"name\":\"username\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Event> ENCODER =
      new BinaryMessageEncoder<Event>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Event> DECODER =
      new BinaryMessageDecoder<Event>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Event> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Event> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Event> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Event>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Event to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Event from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Event instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Event fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private long timestamp;
   private java.lang.CharSequence src_ip;
   private java.lang.CharSequence geolocation;
   private records.avro.RequestMethod request_method;
   private records.avro.RequestStatus request_status;
   private int response_code;
   private java.lang.CharSequence attack_type;
   private int content_length;
   private java.lang.CharSequence content_type;
   private java.lang.CharSequence language;
   private java.lang.CharSequence referer;
   private java.lang.CharSequence user_agent;
   private java.lang.CharSequence uri;
   private java.lang.CharSequence username;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Event() {}

  /**
   * All-args constructor.
   * @param timestamp The new value for timestamp
   * @param src_ip The new value for src_ip
   * @param geolocation The new value for geolocation
   * @param request_method The new value for request_method
   * @param request_status The new value for request_status
   * @param response_code The new value for response_code
   * @param attack_type The new value for attack_type
   * @param content_length The new value for content_length
   * @param content_type The new value for content_type
   * @param language The new value for language
   * @param referer The new value for referer
   * @param user_agent The new value for user_agent
   * @param uri The new value for uri
   * @param username The new value for username
   */
  public Event(java.lang.Long timestamp, java.lang.CharSequence src_ip, java.lang.CharSequence geolocation, records.avro.RequestMethod request_method, records.avro.RequestStatus request_status, java.lang.Integer response_code, java.lang.CharSequence attack_type, java.lang.Integer content_length, java.lang.CharSequence content_type, java.lang.CharSequence language, java.lang.CharSequence referer, java.lang.CharSequence user_agent, java.lang.CharSequence uri, java.lang.CharSequence username) {
    this.timestamp = timestamp;
    this.src_ip = src_ip;
    this.geolocation = geolocation;
    this.request_method = request_method;
    this.request_status = request_status;
    this.response_code = response_code;
    this.attack_type = attack_type;
    this.content_length = content_length;
    this.content_type = content_type;
    this.language = language;
    this.referer = referer;
    this.user_agent = user_agent;
    this.uri = uri;
    this.username = username;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return timestamp;
    case 1: return src_ip;
    case 2: return geolocation;
    case 3: return request_method;
    case 4: return request_status;
    case 5: return response_code;
    case 6: return attack_type;
    case 7: return content_length;
    case 8: return content_type;
    case 9: return language;
    case 10: return referer;
    case 11: return user_agent;
    case 12: return uri;
    case 13: return username;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: timestamp = (java.lang.Long)value$; break;
    case 1: src_ip = (java.lang.CharSequence)value$; break;
    case 2: geolocation = (java.lang.CharSequence)value$; break;
    case 3: request_method = (records.avro.RequestMethod)value$; break;
    case 4: request_status = (records.avro.RequestStatus)value$; break;
    case 5: response_code = (java.lang.Integer)value$; break;
    case 6: attack_type = (java.lang.CharSequence)value$; break;
    case 7: content_length = (java.lang.Integer)value$; break;
    case 8: content_type = (java.lang.CharSequence)value$; break;
    case 9: language = (java.lang.CharSequence)value$; break;
    case 10: referer = (java.lang.CharSequence)value$; break;
    case 11: user_agent = (java.lang.CharSequence)value$; break;
    case 12: uri = (java.lang.CharSequence)value$; break;
    case 13: username = (java.lang.CharSequence)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'timestamp' field.
   * @return The value of the 'timestamp' field.
   */
  public long getTimestamp() {
    return timestamp;
  }


  /**
   * Sets the value of the 'timestamp' field.
   * @param value the value to set.
   */
  public void setTimestamp(long value) {
    this.timestamp = value;
  }

  /**
   * Gets the value of the 'src_ip' field.
   * @return The value of the 'src_ip' field.
   */
  public java.lang.CharSequence getSrcIp() {
    return src_ip;
  }


  /**
   * Sets the value of the 'src_ip' field.
   * @param value the value to set.
   */
  public void setSrcIp(java.lang.CharSequence value) {
    this.src_ip = value;
  }

  /**
   * Gets the value of the 'geolocation' field.
   * @return The value of the 'geolocation' field.
   */
  public java.lang.CharSequence getGeolocation() {
    return geolocation;
  }


  /**
   * Sets the value of the 'geolocation' field.
   * @param value the value to set.
   */
  public void setGeolocation(java.lang.CharSequence value) {
    this.geolocation = value;
  }

  /**
   * Gets the value of the 'request_method' field.
   * @return The value of the 'request_method' field.
   */
  public records.avro.RequestMethod getRequestMethod() {
    return request_method;
  }


  /**
   * Sets the value of the 'request_method' field.
   * @param value the value to set.
   */
  public void setRequestMethod(records.avro.RequestMethod value) {
    this.request_method = value;
  }

  /**
   * Gets the value of the 'request_status' field.
   * @return The value of the 'request_status' field.
   */
  public records.avro.RequestStatus getRequestStatus() {
    return request_status;
  }


  /**
   * Sets the value of the 'request_status' field.
   * @param value the value to set.
   */
  public void setRequestStatus(records.avro.RequestStatus value) {
    this.request_status = value;
  }

  /**
   * Gets the value of the 'response_code' field.
   * @return The value of the 'response_code' field.
   */
  public int getResponseCode() {
    return response_code;
  }


  /**
   * Sets the value of the 'response_code' field.
   * @param value the value to set.
   */
  public void setResponseCode(int value) {
    this.response_code = value;
  }

  /**
   * Gets the value of the 'attack_type' field.
   * @return The value of the 'attack_type' field.
   */
  public java.lang.CharSequence getAttackType() {
    return attack_type;
  }


  /**
   * Sets the value of the 'attack_type' field.
   * @param value the value to set.
   */
  public void setAttackType(java.lang.CharSequence value) {
    this.attack_type = value;
  }

  /**
   * Gets the value of the 'content_length' field.
   * @return The value of the 'content_length' field.
   */
  public int getContentLength() {
    return content_length;
  }


  /**
   * Sets the value of the 'content_length' field.
   * @param value the value to set.
   */
  public void setContentLength(int value) {
    this.content_length = value;
  }

  /**
   * Gets the value of the 'content_type' field.
   * @return The value of the 'content_type' field.
   */
  public java.lang.CharSequence getContentType() {
    return content_type;
  }


  /**
   * Sets the value of the 'content_type' field.
   * @param value the value to set.
   */
  public void setContentType(java.lang.CharSequence value) {
    this.content_type = value;
  }

  /**
   * Gets the value of the 'language' field.
   * @return The value of the 'language' field.
   */
  public java.lang.CharSequence getLanguage() {
    return language;
  }


  /**
   * Sets the value of the 'language' field.
   * @param value the value to set.
   */
  public void setLanguage(java.lang.CharSequence value) {
    this.language = value;
  }

  /**
   * Gets the value of the 'referer' field.
   * @return The value of the 'referer' field.
   */
  public java.lang.CharSequence getReferer() {
    return referer;
  }


  /**
   * Sets the value of the 'referer' field.
   * @param value the value to set.
   */
  public void setReferer(java.lang.CharSequence value) {
    this.referer = value;
  }

  /**
   * Gets the value of the 'user_agent' field.
   * @return The value of the 'user_agent' field.
   */
  public java.lang.CharSequence getUserAgent() {
    return user_agent;
  }


  /**
   * Sets the value of the 'user_agent' field.
   * @param value the value to set.
   */
  public void setUserAgent(java.lang.CharSequence value) {
    this.user_agent = value;
  }

  /**
   * Gets the value of the 'uri' field.
   * @return The value of the 'uri' field.
   */
  public java.lang.CharSequence getUri() {
    return uri;
  }


  /**
   * Sets the value of the 'uri' field.
   * @param value the value to set.
   */
  public void setUri(java.lang.CharSequence value) {
    this.uri = value;
  }

  /**
   * Gets the value of the 'username' field.
   * @return The value of the 'username' field.
   */
  public java.lang.CharSequence getUsername() {
    return username;
  }


  /**
   * Sets the value of the 'username' field.
   * @param value the value to set.
   */
  public void setUsername(java.lang.CharSequence value) {
    this.username = value;
  }

  /**
   * Creates a new Event RecordBuilder.
   * @return A new Event RecordBuilder
   */
  public static records.avro.Event.Builder newBuilder() {
    return new records.avro.Event.Builder();
  }

  /**
   * Creates a new Event RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Event RecordBuilder
   */
  public static records.avro.Event.Builder newBuilder(records.avro.Event.Builder other) {
    if (other == null) {
      return new records.avro.Event.Builder();
    } else {
      return new records.avro.Event.Builder(other);
    }
  }

  /**
   * Creates a new Event RecordBuilder by copying an existing Event instance.
   * @param other The existing instance to copy.
   * @return A new Event RecordBuilder
   */
  public static records.avro.Event.Builder newBuilder(records.avro.Event other) {
    if (other == null) {
      return new records.avro.Event.Builder();
    } else {
      return new records.avro.Event.Builder(other);
    }
  }

  /**
   * RecordBuilder for Event instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Event>
    implements org.apache.avro.data.RecordBuilder<Event> {

    private long timestamp;
    private java.lang.CharSequence src_ip;
    private java.lang.CharSequence geolocation;
    private records.avro.RequestMethod request_method;
    private records.avro.RequestStatus request_status;
    private int response_code;
    private java.lang.CharSequence attack_type;
    private int content_length;
    private java.lang.CharSequence content_type;
    private java.lang.CharSequence language;
    private java.lang.CharSequence referer;
    private java.lang.CharSequence user_agent;
    private java.lang.CharSequence uri;
    private java.lang.CharSequence username;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(records.avro.Event.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[0].schema(), other.timestamp);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.src_ip)) {
        this.src_ip = data().deepCopy(fields()[1].schema(), other.src_ip);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.geolocation)) {
        this.geolocation = data().deepCopy(fields()[2].schema(), other.geolocation);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.request_method)) {
        this.request_method = data().deepCopy(fields()[3].schema(), other.request_method);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.request_status)) {
        this.request_status = data().deepCopy(fields()[4].schema(), other.request_status);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.response_code)) {
        this.response_code = data().deepCopy(fields()[5].schema(), other.response_code);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.attack_type)) {
        this.attack_type = data().deepCopy(fields()[6].schema(), other.attack_type);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.content_length)) {
        this.content_length = data().deepCopy(fields()[7].schema(), other.content_length);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.content_type)) {
        this.content_type = data().deepCopy(fields()[8].schema(), other.content_type);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.language)) {
        this.language = data().deepCopy(fields()[9].schema(), other.language);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.referer)) {
        this.referer = data().deepCopy(fields()[10].schema(), other.referer);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.user_agent)) {
        this.user_agent = data().deepCopy(fields()[11].schema(), other.user_agent);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.uri)) {
        this.uri = data().deepCopy(fields()[12].schema(), other.uri);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.username)) {
        this.username = data().deepCopy(fields()[13].schema(), other.username);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
    }

    /**
     * Creates a Builder by copying an existing Event instance
     * @param other The existing instance to copy.
     */
    private Builder(records.avro.Event other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[0].schema(), other.timestamp);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.src_ip)) {
        this.src_ip = data().deepCopy(fields()[1].schema(), other.src_ip);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.geolocation)) {
        this.geolocation = data().deepCopy(fields()[2].schema(), other.geolocation);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.request_method)) {
        this.request_method = data().deepCopy(fields()[3].schema(), other.request_method);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.request_status)) {
        this.request_status = data().deepCopy(fields()[4].schema(), other.request_status);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.response_code)) {
        this.response_code = data().deepCopy(fields()[5].schema(), other.response_code);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.attack_type)) {
        this.attack_type = data().deepCopy(fields()[6].schema(), other.attack_type);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.content_length)) {
        this.content_length = data().deepCopy(fields()[7].schema(), other.content_length);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.content_type)) {
        this.content_type = data().deepCopy(fields()[8].schema(), other.content_type);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.language)) {
        this.language = data().deepCopy(fields()[9].schema(), other.language);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.referer)) {
        this.referer = data().deepCopy(fields()[10].schema(), other.referer);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.user_agent)) {
        this.user_agent = data().deepCopy(fields()[11].schema(), other.user_agent);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.uri)) {
        this.uri = data().deepCopy(fields()[12].schema(), other.uri);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.username)) {
        this.username = data().deepCopy(fields()[13].schema(), other.username);
        fieldSetFlags()[13] = true;
      }
    }

    /**
      * Gets the value of the 'timestamp' field.
      * @return The value.
      */
    public long getTimestamp() {
      return timestamp;
    }


    /**
      * Sets the value of the 'timestamp' field.
      * @param value The value of 'timestamp'.
      * @return This builder.
      */
    public records.avro.Event.Builder setTimestamp(long value) {
      validate(fields()[0], value);
      this.timestamp = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'timestamp' field has been set.
      * @return True if the 'timestamp' field has been set, false otherwise.
      */
    public boolean hasTimestamp() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'timestamp' field.
      * @return This builder.
      */
    public records.avro.Event.Builder clearTimestamp() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'src_ip' field.
      * @return The value.
      */
    public java.lang.CharSequence getSrcIp() {
      return src_ip;
    }


    /**
      * Sets the value of the 'src_ip' field.
      * @param value The value of 'src_ip'.
      * @return This builder.
      */
    public records.avro.Event.Builder setSrcIp(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.src_ip = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'src_ip' field has been set.
      * @return True if the 'src_ip' field has been set, false otherwise.
      */
    public boolean hasSrcIp() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'src_ip' field.
      * @return This builder.
      */
    public records.avro.Event.Builder clearSrcIp() {
      src_ip = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'geolocation' field.
      * @return The value.
      */
    public java.lang.CharSequence getGeolocation() {
      return geolocation;
    }


    /**
      * Sets the value of the 'geolocation' field.
      * @param value The value of 'geolocation'.
      * @return This builder.
      */
    public records.avro.Event.Builder setGeolocation(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.geolocation = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'geolocation' field has been set.
      * @return True if the 'geolocation' field has been set, false otherwise.
      */
    public boolean hasGeolocation() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'geolocation' field.
      * @return This builder.
      */
    public records.avro.Event.Builder clearGeolocation() {
      geolocation = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'request_method' field.
      * @return The value.
      */
    public records.avro.RequestMethod getRequestMethod() {
      return request_method;
    }


    /**
      * Sets the value of the 'request_method' field.
      * @param value The value of 'request_method'.
      * @return This builder.
      */
    public records.avro.Event.Builder setRequestMethod(records.avro.RequestMethod value) {
      validate(fields()[3], value);
      this.request_method = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'request_method' field has been set.
      * @return True if the 'request_method' field has been set, false otherwise.
      */
    public boolean hasRequestMethod() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'request_method' field.
      * @return This builder.
      */
    public records.avro.Event.Builder clearRequestMethod() {
      request_method = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'request_status' field.
      * @return The value.
      */
    public records.avro.RequestStatus getRequestStatus() {
      return request_status;
    }


    /**
      * Sets the value of the 'request_status' field.
      * @param value The value of 'request_status'.
      * @return This builder.
      */
    public records.avro.Event.Builder setRequestStatus(records.avro.RequestStatus value) {
      validate(fields()[4], value);
      this.request_status = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'request_status' field has been set.
      * @return True if the 'request_status' field has been set, false otherwise.
      */
    public boolean hasRequestStatus() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'request_status' field.
      * @return This builder.
      */
    public records.avro.Event.Builder clearRequestStatus() {
      request_status = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'response_code' field.
      * @return The value.
      */
    public int getResponseCode() {
      return response_code;
    }


    /**
      * Sets the value of the 'response_code' field.
      * @param value The value of 'response_code'.
      * @return This builder.
      */
    public records.avro.Event.Builder setResponseCode(int value) {
      validate(fields()[5], value);
      this.response_code = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'response_code' field has been set.
      * @return True if the 'response_code' field has been set, false otherwise.
      */
    public boolean hasResponseCode() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'response_code' field.
      * @return This builder.
      */
    public records.avro.Event.Builder clearResponseCode() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'attack_type' field.
      * @return The value.
      */
    public java.lang.CharSequence getAttackType() {
      return attack_type;
    }


    /**
      * Sets the value of the 'attack_type' field.
      * @param value The value of 'attack_type'.
      * @return This builder.
      */
    public records.avro.Event.Builder setAttackType(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.attack_type = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'attack_type' field has been set.
      * @return True if the 'attack_type' field has been set, false otherwise.
      */
    public boolean hasAttackType() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'attack_type' field.
      * @return This builder.
      */
    public records.avro.Event.Builder clearAttackType() {
      attack_type = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'content_length' field.
      * @return The value.
      */
    public int getContentLength() {
      return content_length;
    }


    /**
      * Sets the value of the 'content_length' field.
      * @param value The value of 'content_length'.
      * @return This builder.
      */
    public records.avro.Event.Builder setContentLength(int value) {
      validate(fields()[7], value);
      this.content_length = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'content_length' field has been set.
      * @return True if the 'content_length' field has been set, false otherwise.
      */
    public boolean hasContentLength() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'content_length' field.
      * @return This builder.
      */
    public records.avro.Event.Builder clearContentLength() {
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'content_type' field.
      * @return The value.
      */
    public java.lang.CharSequence getContentType() {
      return content_type;
    }


    /**
      * Sets the value of the 'content_type' field.
      * @param value The value of 'content_type'.
      * @return This builder.
      */
    public records.avro.Event.Builder setContentType(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.content_type = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'content_type' field has been set.
      * @return True if the 'content_type' field has been set, false otherwise.
      */
    public boolean hasContentType() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'content_type' field.
      * @return This builder.
      */
    public records.avro.Event.Builder clearContentType() {
      content_type = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'language' field.
      * @return The value.
      */
    public java.lang.CharSequence getLanguage() {
      return language;
    }


    /**
      * Sets the value of the 'language' field.
      * @param value The value of 'language'.
      * @return This builder.
      */
    public records.avro.Event.Builder setLanguage(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.language = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'language' field has been set.
      * @return True if the 'language' field has been set, false otherwise.
      */
    public boolean hasLanguage() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'language' field.
      * @return This builder.
      */
    public records.avro.Event.Builder clearLanguage() {
      language = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'referer' field.
      * @return The value.
      */
    public java.lang.CharSequence getReferer() {
      return referer;
    }


    /**
      * Sets the value of the 'referer' field.
      * @param value The value of 'referer'.
      * @return This builder.
      */
    public records.avro.Event.Builder setReferer(java.lang.CharSequence value) {
      validate(fields()[10], value);
      this.referer = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'referer' field has been set.
      * @return True if the 'referer' field has been set, false otherwise.
      */
    public boolean hasReferer() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'referer' field.
      * @return This builder.
      */
    public records.avro.Event.Builder clearReferer() {
      referer = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'user_agent' field.
      * @return The value.
      */
    public java.lang.CharSequence getUserAgent() {
      return user_agent;
    }


    /**
      * Sets the value of the 'user_agent' field.
      * @param value The value of 'user_agent'.
      * @return This builder.
      */
    public records.avro.Event.Builder setUserAgent(java.lang.CharSequence value) {
      validate(fields()[11], value);
      this.user_agent = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'user_agent' field has been set.
      * @return True if the 'user_agent' field has been set, false otherwise.
      */
    public boolean hasUserAgent() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'user_agent' field.
      * @return This builder.
      */
    public records.avro.Event.Builder clearUserAgent() {
      user_agent = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'uri' field.
      * @return The value.
      */
    public java.lang.CharSequence getUri() {
      return uri;
    }


    /**
      * Sets the value of the 'uri' field.
      * @param value The value of 'uri'.
      * @return This builder.
      */
    public records.avro.Event.Builder setUri(java.lang.CharSequence value) {
      validate(fields()[12], value);
      this.uri = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'uri' field has been set.
      * @return True if the 'uri' field has been set, false otherwise.
      */
    public boolean hasUri() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'uri' field.
      * @return This builder.
      */
    public records.avro.Event.Builder clearUri() {
      uri = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'username' field.
      * @return The value.
      */
    public java.lang.CharSequence getUsername() {
      return username;
    }


    /**
      * Sets the value of the 'username' field.
      * @param value The value of 'username'.
      * @return This builder.
      */
    public records.avro.Event.Builder setUsername(java.lang.CharSequence value) {
      validate(fields()[13], value);
      this.username = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'username' field has been set.
      * @return True if the 'username' field has been set, false otherwise.
      */
    public boolean hasUsername() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'username' field.
      * @return This builder.
      */
    public records.avro.Event.Builder clearUsername() {
      username = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Event build() {
      try {
        Event record = new Event();
        record.timestamp = fieldSetFlags()[0] ? this.timestamp : (java.lang.Long) defaultValue(fields()[0]);
        record.src_ip = fieldSetFlags()[1] ? this.src_ip : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.geolocation = fieldSetFlags()[2] ? this.geolocation : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.request_method = fieldSetFlags()[3] ? this.request_method : (records.avro.RequestMethod) defaultValue(fields()[3]);
        record.request_status = fieldSetFlags()[4] ? this.request_status : (records.avro.RequestStatus) defaultValue(fields()[4]);
        record.response_code = fieldSetFlags()[5] ? this.response_code : (java.lang.Integer) defaultValue(fields()[5]);
        record.attack_type = fieldSetFlags()[6] ? this.attack_type : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.content_length = fieldSetFlags()[7] ? this.content_length : (java.lang.Integer) defaultValue(fields()[7]);
        record.content_type = fieldSetFlags()[8] ? this.content_type : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.language = fieldSetFlags()[9] ? this.language : (java.lang.CharSequence) defaultValue(fields()[9]);
        record.referer = fieldSetFlags()[10] ? this.referer : (java.lang.CharSequence) defaultValue(fields()[10]);
        record.user_agent = fieldSetFlags()[11] ? this.user_agent : (java.lang.CharSequence) defaultValue(fields()[11]);
        record.uri = fieldSetFlags()[12] ? this.uri : (java.lang.CharSequence) defaultValue(fields()[12]);
        record.username = fieldSetFlags()[13] ? this.username : (java.lang.CharSequence) defaultValue(fields()[13]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Event>
    WRITER$ = (org.apache.avro.io.DatumWriter<Event>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Event>
    READER$ = (org.apache.avro.io.DatumReader<Event>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeLong(this.timestamp);

    out.writeString(this.src_ip);

    out.writeString(this.geolocation);

    out.writeEnum(this.request_method.ordinal());

    out.writeEnum(this.request_status.ordinal());

    out.writeInt(this.response_code);

    out.writeString(this.attack_type);

    out.writeInt(this.content_length);

    out.writeString(this.content_type);

    out.writeString(this.language);

    out.writeString(this.referer);

    out.writeString(this.user_agent);

    out.writeString(this.uri);

    out.writeString(this.username);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.timestamp = in.readLong();

      this.src_ip = in.readString(this.src_ip instanceof Utf8 ? (Utf8)this.src_ip : null);

      this.geolocation = in.readString(this.geolocation instanceof Utf8 ? (Utf8)this.geolocation : null);

      this.request_method = records.avro.RequestMethod.values()[in.readEnum()];

      this.request_status = records.avro.RequestStatus.values()[in.readEnum()];

      this.response_code = in.readInt();

      this.attack_type = in.readString(this.attack_type instanceof Utf8 ? (Utf8)this.attack_type : null);

      this.content_length = in.readInt();

      this.content_type = in.readString(this.content_type instanceof Utf8 ? (Utf8)this.content_type : null);

      this.language = in.readString(this.language instanceof Utf8 ? (Utf8)this.language : null);

      this.referer = in.readString(this.referer instanceof Utf8 ? (Utf8)this.referer : null);

      this.user_agent = in.readString(this.user_agent instanceof Utf8 ? (Utf8)this.user_agent : null);

      this.uri = in.readString(this.uri instanceof Utf8 ? (Utf8)this.uri : null);

      this.username = in.readString(this.username instanceof Utf8 ? (Utf8)this.username : null);

    } else {
      for (int i = 0; i < 14; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.timestamp = in.readLong();
          break;

        case 1:
          this.src_ip = in.readString(this.src_ip instanceof Utf8 ? (Utf8)this.src_ip : null);
          break;

        case 2:
          this.geolocation = in.readString(this.geolocation instanceof Utf8 ? (Utf8)this.geolocation : null);
          break;

        case 3:
          this.request_method = records.avro.RequestMethod.values()[in.readEnum()];
          break;

        case 4:
          this.request_status = records.avro.RequestStatus.values()[in.readEnum()];
          break;

        case 5:
          this.response_code = in.readInt();
          break;

        case 6:
          this.attack_type = in.readString(this.attack_type instanceof Utf8 ? (Utf8)this.attack_type : null);
          break;

        case 7:
          this.content_length = in.readInt();
          break;

        case 8:
          this.content_type = in.readString(this.content_type instanceof Utf8 ? (Utf8)this.content_type : null);
          break;

        case 9:
          this.language = in.readString(this.language instanceof Utf8 ? (Utf8)this.language : null);
          break;

        case 10:
          this.referer = in.readString(this.referer instanceof Utf8 ? (Utf8)this.referer : null);
          break;

        case 11:
          this.user_agent = in.readString(this.user_agent instanceof Utf8 ? (Utf8)this.user_agent : null);
          break;

        case 12:
          this.uri = in.readString(this.uri instanceof Utf8 ? (Utf8)this.uri : null);
          break;

        case 13:
          this.username = in.readString(this.username instanceof Utf8 ? (Utf8)this.username : null);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










